version: 2.1

executors:
  default:
    docker:
      - image: circleci/ruby:3.0.3
        environment:
          RAILS_ENV: test
          DATABASE_URL: postgresql://root:pass@127.0.0.1:5432
          SECRET_KEY_BASE: test_dive_map_api
      - image: circleci/postgres:9.6.22
        environment:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: pass

jobs:
  build:
    executor: default
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1

      - run:
          name: wait for DB
          command: ./dockerize -wait tcp://localhost:5432 -timeout 1m

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
          - v2-dependencies-

      - run:
          name: install newest bundler
          command: gem install bundler --pre

      - run:
          name: install dependencies
          command: bundle install --jobs=18 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: run rubocop
          command: bundle exec rubocop

      - run: bundle exec rails db:create
      - run: bundle exec rails db:migrate

      - run:
          name: run rspec
          command: bundle exec rspec

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
            tags:
              only: /.*/
